# В этом файле уже 3 сервиса
version: '3'
services:
  # Постгрес база в отдельном контейнере
  postgres:
    # Устанавливаем готовый образ
    image: postgres 
    # Задаем глобальные переменные для доступа к PG
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=airflow
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 3
      timeout: 5s

  # Airflow в отдельном контейнере
  airflow:
    # Сборка из Dockerfile
    build: .
    command: exec python /project/scripts/user_create.py
    restart: always
    # Определчет порядок запуска сервисов
    depends_on:
      postgres:
        condition: service_healthy
    # Airflow поддерживает конфигурирование переменных из конфиг файла
    # https://airflow.apache.org/docs/apache-airflow/stable/howto/set-config.html
    environment:
      - AIRFLOW__CORE__FERNET_KEY=HXJmviZ45J6R0bM1DFFij0JJ1ca_JMDWo9Z-Q-wqsFk= # Для шифрования подключений
      - AIRFLOW__WEBSERVER__SECRET_KEY=b27dfe9846d048294adc0df96ad43239fa325db739a0a69a60672e3e6272
    # Пробрасываем порты
    ports:
      - 8080:8080
    # Пробрасываем папку с дагами
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080

